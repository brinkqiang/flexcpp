<pattern>{

    [[:blank:]]+        {
                            d_block.clear();
                            d_block.open(lineno(), filename()); 
                            return Parser::WS;
                        }

    "[^"                |
    "[^]"               |
    "[^]["              {
                            size_t pos = match().find(']');
                            if (pos != string::npos)
                            {
                                d_initialClosingBracket =  true;
                                less(2);
                            }
                            return begin(charclass, Parser::CC_NEGATED);
                        }

    "["                 |
    "[]"                |   
    "[]["               {
                            size_t pos = match().find(']');
                            if (pos != string::npos)
                            {
                                d_initialClosingBracket =  true;
                                less(1);
                            }
                            return begin(charclass, Parser::CC_START);
                        }

    
    "{+}"               return Parser::CC_PLUS;
    "{-}"               return Parser::CC_MINUS;

    \{{NAME}\}          pushNameExpansion();
    
    "$"/[^[:space:]\n]  return Parser::CHARACTER;

    "$"                 pushEOLNlookahead();

    "<<EOF>>"           return Parser::EOF_PATTERN;
}

