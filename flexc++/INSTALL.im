    // The name of the program and the support directories as installed by
    // the 'build install' command. Normally there is no reason for changing
    // this #define
#define PROGRAM             "flexc++"

    // The following /bin/cp options are used to keep, rather than follow
    // symbolic references. If your installation doesn't support these flags,
    // then change them into available ones.
    //   -P, --no-dereference
    //            never follow symbolic links in SOURCE
    //   --preserve[=ATTR_LIST]
    //          preserve   the   specified   attributes   (default:  
    //          mode,ownership,timestamps), if possible  additional  
    //          attributes:  context, links, all
    //   -d     same as --no-dereference --preserve=links
#define CPOPTS  "-d"


    // The CXX, CXXFLAGS, and LDFLAGS #defines are overruled by identically
    // named environment variables:

    // the compiler to use. 
#define CXX                 "g++"

    // the compiler options to use.
//#define CXXFLAGS            "--std=c++14 -Wall -O2 -g"
#define CXXFLAGS            "--std=c++14 -Wall -O2 -fdiagnostics-color=never"

    // flags passed to the linker
#define LDFLAGS             ""



// =========================================================================
// Deactivate (e.g., use //#define ...) the following #defines to prevent
// installation of the indicated component by 'build install'
// 'build install base' can be used to specify a base directory below which
// all components are installed (e.g., flexc++  is then installed in
// 'base + BINARY')
// =========================================================================


    // the directory where Flexc++ is installed
#define BINARY     "/usr/bin"

    // the directory where the skeleton files are installed
#define SKEL    "/usr/share/"${PROGRAM}

    // the directory below whre the manual pages are stored (below 
    //                                          /man1, /man3 and /man7)
#define MAN     "/usr/share/man"

    // the directory whre the manual page is stored
#define MANUAL   "/usr/share/doc/"${PROGRAM}"/manual"

    // the directory where the standard documentation is stored 
#define STD     "/usr/share/doc/"${PROGRAM}
