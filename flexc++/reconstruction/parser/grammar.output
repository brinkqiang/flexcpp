
Production Rules
(rule precedences determined from %prec or 1st terminal between parentheses):
1: input (SECTION_DELIMITER) ->  opt_directives SECTION_DELIMITER rules
2: identifier (IDENTIFIER) ->  IDENTIFIER
3: _sc_name ->  <empty>
4: _start_condition_type (INCL_START_CONDITION) ->  INCL_START_CONDITION _sc_name
5: _start_condition_type (EXCL_START_CONDITION) ->  EXCL_START_CONDITION _sc_name
6: _start_condition_names ->  _start_condition_names identifier
7: _start_condition_names ->  identifier
8: _start_condition_directive ->  _start_condition_type _start_condition_names
9: _name_def ->  identifier
10: _name_definition (STRING) ->  _name_def STRING
11: _directive ->  option
12: _directive ->  _start_condition_directive
13: _directive ->  _name_definition
14: _directive (_error_) ->  _error_
15: _directive ->  <empty>
16: _directive_line ('\x0a') ->  _directive '\x0a'
17: opt_directives ->  opt_directives _directive_line
18: opt_directives ->  <empty>
19: _inputinterface (INPUTINTERFACE) ->  INPUTINTERFACE
20: _inputimplementation (INPUTIMPLEMENTATION) ->  INPUTIMPLEMENTATION
21: _classname (CLASSNAME) ->  CLASSNAME
22: _lexfunctionname (LEXFUNCTIONNAME) ->  LEXFUNCTIONNAME
23: _baseclassheader (BASECLASSHEADER) ->  BASECLASSHEADER
24: _classheader (CLASSHEADER) ->  CLASSHEADER
25: _implementationheader (IMPLEMENTATIONHEADER) ->  IMPLEMENTATIONHEADER
26: _lexsource (LEXSOURCE) ->  LEXSOURCE
27: _skeleton_directory (SKELETON_DIRECTORY) ->  SKELETON_DIRECTORY
28: _namespace (NAMESPACE) ->  NAMESPACE
29: _stringOrIdent (STRING) ->  STRING
30: _stringOrIdent (IDENTIFIER) ->  IDENTIFIER
31: _opt_comma (',') ->  ','
32: _opt_comma ->  <empty>
33: _debugname (IDENTIFIER) ->  IDENTIFIER
34: _debugnamelist ->  _debugnamelist _opt_comma _debugname
35: _debugnamelist ->  _debugname
36: _m_debugnamelist ->  <empty>
37: _opt_debugnamelist ('=') ->  _m_debugnamelist '=' _debugnamelist
38: _opt_debugnamelist ->  <empty>
39: _firststep (DECIMAL) ->  DECIMAL
40: _opt_laststep ->  <empty>
41: _opt_laststep (DECIMAL) ->  DECIMAL
42: _m_debugsteps ->  <empty>
43: _opt_steprange ('=') ->  _m_debugsteps '=' _firststep _opt_laststep
44: _opt_steprange ->  <empty>
45: option ('=') ->  _inputinterface '=' _stringOrIdent
46: option ('=') ->  _inputimplementation '=' _stringOrIdent
47: option ('=') ->  _classname '=' _stringOrIdent
48: option ('=') ->  _lexfunctionname '=' _stringOrIdent
49: option ('=') ->  _baseclassheader '=' _stringOrIdent
50: option ('=') ->  _classheader '=' _stringOrIdent
51: option ('=') ->  _implementationheader '=' _stringOrIdent
52: option ('=') ->  _lexsource '=' _stringOrIdent
53: option ('=') ->  _skeleton_directory '=' _stringOrIdent
54: option ('=') ->  _namespace '=' _stringOrIdent
55: option (INTERACTIVE) ->  INTERACTIVE
56: option (DEBUG) ->  DEBUG _opt_debugnamelist
57: option (DEBUG_STEPS) ->  DEBUG_STEPS _opt_steprange
58: option (NOLINES) ->  NOLINES
59: _miniscanner_list (',') ->  _miniscanner_list ',' identifier
60: _miniscanner_list ->  identifier
61: _miniscanner_specs ('*') ->  '*'
62: _miniscanner_specs ->  _miniscanner_list
63: _miniscanner ('<') ->  '<' _miniscanner_specs '>'
64: _combi_chars (STRING) ->  STRING
65: _combi_chars (DECIMAL) ->  DECIMAL
66: _combi_chars (ESCAPE_SEQUENCE) ->  ESCAPE_SEQUENCE
67: _combi_chars ->  identifier
68: _combi_chars (CHAR) ->  CHAR
69: _combi_chars ('.') ->  '.'
70: _combi_chars (',') ->  ','
71: _combi_chars ('^') ->  '^'
72: _combi_chars ('$') ->  '$'
73: _combi_chars ('=') ->  '='
74: _combi_chars ('-') ->  '-'
75: _combi_chars (''') ->  '''
76: _decimal (DECIMAL) ->  DECIMAL
77: _interval (DECIMAL) ->  DECIMAL
78: _interval (',') ->  _decimal ',' DECIMAL
79: _interval (',') ->  _decimal ','
80: _quantifier ('*') ->  '*'
81: _quantifier ('+') ->  '+'
82: _quantifier ('?') ->  '?'
83: _quantifier ('{') ->  '{' _interval '}'
84: _m_contents ->  <empty>
85: _cc_start (CC_START) ->  CC_START _m_contents
86: _cc_negated (CC_NEGATED) ->  CC_NEGATED _m_contents
87: _cc_end (']') ->  ']'
88: _cc_char ('/') ->  '/'
89: _cc_char ('|') ->  '|'
90: _cc_char ('(') ->  '('
91: _cc_char (')') ->  ')'
92: _cc_char ('*') ->  '*'
93: _cc_char ('+') ->  '+'
94: _cc_char ('?') ->  '?'
95: _cc_char ('{') ->  '{'
96: _cc_char ('}') ->  '}'
97: _cc_char ('<') ->  '<'
98: _cc_char ('>') ->  '>'
99: _cc_char ('[') ->  '['
100: _cc_element ->  _combi_chars
101: _cc_element (PREDEFINED_CLASS) ->  PREDEFINED_CLASS
102: _cc_element ->  _cc_char
103: _cc_contents ->  _cc_contents _cc_element
104: _cc_contents ->  _cc_element
105: _cc_set ->  _cc_start _cc_contents _cc_end
106: _cc_set ->  _cc_negated _cc_contents _cc_end
107: _characterclass (CC_PLUS) ->  _characterclass CC_PLUS _characterclass
108: _characterclass (CC_MINUS) ->  _characterclass CC_MINUS _characterclass
109: _characterclass ->  _cc_set
110: _simple_regex ->  _combi_chars
111: _simple_regex (CHAR) ->  _simple_regex _simple_regex
112: _simple_regex ('|') ->  _simple_regex '|' _simple_regex
113: _simple_regex ('(') ->  '(' _simple_regex ')'
114: _simple_regex ->  _simple_regex _quantifier
115: _simple_regex ->  _characterclass
116: _p_regex ->  _simple_regex
117: _regex ->  _p_regex
118: _regex ('/') ->  _p_regex '/' _p_regex
119: _optMs_regex ->  _miniscanner _regex
120: _optMs_regex ->  _regex
121: _optMs_regex_list (ORNL) ->  _optMs_regex_list ORNL _optMs_regex_list
122: _optMs_regex_list ->  _optMs_regex
123: _block (BLOCK) ->  BLOCK
124: _regex_list (ORNL) ->  _regex_list ORNL _regex_list
125: _regex_list ->  _regex
126: _msBlock_rule_def ->  <empty>
127: _msBlock_rule_def ->  _regex_list
128: _msBlock_rule_def ->  _regex_list _block
129: _msBlock_rule_def (EOF_PATTERN) ->  EOF_PATTERN
130: _msBlock_rule_def (EOF_PATTERN) ->  EOF_PATTERN _block
131: _msBlock_rule ('\x0a') ->  _msBlock_rule_def '\x0a'
132: _msBlock_rules ->  _msBlock_rules _msBlock_rule
133: _msBlock_rules ->  <empty>
134: _ms_block ('{') ->  _miniscanner '{' _msBlock_rules _msBlock_rule_def '}'
135: _rule_def ->  <empty>
136: _rule_def (_error_) ->  _error_
137: _rule_def ->  _optMs_regex_list
138: _rule_def ->  _optMs_regex_list _block
139: _rule_def ->  _ms_block
140: _rule_def (EOF_PATTERN) ->  EOF_PATTERN
141: _rule_def (EOF_PATTERN) ->  EOF_PATTERN _block
142: _rule ('\x0a') ->  _rule_def '\x0a'
143: rules ->  rules _rule
144: rules ->  <empty>
145: input_$ ->  input


Symbolic Terminal tokens:
       error
       EOF
   257: EXCL_START_CONDITION
   258: INCL_START_CONDITION
   259: SECTION_DELIMITER
   260: BASECLASSHEADER
   261: CLASSHEADER
   262: CLASSNAME
   263: DEBUG
   264: DEBUG_STEPS
   265: IMPLEMENTATIONHEADER
   266: INPUTIMPLEMENTATION
   267: INPUTINTERFACE
   268: INTERACTIVE
   269: LEXFUNCTIONNAME
   270: LEXSOURCE
   271: NAMESPACE
   272: NOLINES
   273: SKELETON_DIRECTORY
   274: BLOCK
   275: IDENTIFIER
   276: EOF_PATTERN
   277: STRING
   278: DECIMAL
   279: ESCAPE_SEQUENCE
   280: CC_START
   281: CC_NEGATED
   282: PREDEFINED_CLASS
   283: ORNL
    47: '/'
   124: '|'
   284: CHAR
   285: CC_PLUS
   286: CC_MINUS
    10: '\x0a'
    44: ','
    61: '='
    42: '*'
    60: '<'
    62: '>'
    46: '.'
    94: '^'
    36: '$'
    45: '-'
    39: '''
    43: '+'
    63: '?'
   123: '{'
   125: '}'
    93: ']'
    40: '('
    41: ')'
    91: '['


Grammar States: 
State 0:
145: input_$ ->  . input 
  0:   On input to state 1
  1:   On opt_directives to state 2
  Reduce by 18: opt_directives ->  . 


State 1:
145: input_$ -> input  . 


State 2:
1: input -> opt_directives  . SECTION_DELIMITER rules 
17: opt_directives -> opt_directives  . _directive_line 
  0:   On SECTION_DELIMITER to state 3
  1:   On _directive_line to state 4
  2:   On _directive to state 5
  3:   On option to state 6
  4:   On _start_condition_directive to state 7
  5:   On _name_definition to state 8
  6:   On _error_ to state 9
  7:   On _inputinterface to state 10
  8:   On _inputimplementation to state 11
  9:   On _classname to state 12
  10:   On _lexfunctionname to state 13
  11:   On _baseclassheader to state 14
  12:   On _classheader to state 15
  13:   On _implementationheader to state 16
  14:   On _lexsource to state 17
  15:   On _skeleton_directory to state 18
  16:   On _namespace to state 19
  17:   On INTERACTIVE to state 20
  18:   On DEBUG to state 21
  19:   On DEBUG_STEPS to state 22
  20:   On NOLINES to state 23
  21:   On _start_condition_type to state 24
  22:   On _name_def to state 25
  23:   On INPUTINTERFACE to state 26
  24:   On INPUTIMPLEMENTATION to state 27
  25:   On CLASSNAME to state 28
  26:   On LEXFUNCTIONNAME to state 29
  27:   On BASECLASSHEADER to state 30
  28:   On CLASSHEADER to state 31
  29:   On IMPLEMENTATIONHEADER to state 32
  30:   On LEXSOURCE to state 33
  31:   On SKELETON_DIRECTORY to state 34
  32:   On NAMESPACE to state 35
  33:   On INCL_START_CONDITION to state 36
  34:   On EXCL_START_CONDITION to state 37
  35:   On identifier to state 38
  36:   On IDENTIFIER to state 39
  Reduce by 15: _directive ->  . 


State 3:
1: input -> opt_directives SECTION_DELIMITER  . rules 
  0:   On rules to state 40
  Reduce by 144: rules ->  . 


State 4:
17: opt_directives -> opt_directives _directive_line  . 
  Reduce by 17: opt_directives -> opt_directives _directive_line  . 


State 5:
16: _directive_line -> _directive  . '\x0a' 
  0:   On '\x0a' to state 41


State 6:
11: _directive -> option  . 
  Reduce by 11: _directive -> option  . 


State 7:
12: _directive -> _start_condition_directive  . 
  Reduce by 12: _directive -> _start_condition_directive  . 


State 8:
13: _directive -> _name_definition  . 
  Reduce by 13: _directive -> _name_definition  . 


State 9:
14: _directive -> _error_  . 
  Reduce by 14: _directive -> _error_  . 


State 10:
45: option -> _inputinterface  . '=' _stringOrIdent 
  0:   On '=' to state 42


State 11:
46: option -> _inputimplementation  . '=' _stringOrIdent 
  0:   On '=' to state 43


State 12:
47: option -> _classname  . '=' _stringOrIdent 
  0:   On '=' to state 44


State 13:
48: option -> _lexfunctionname  . '=' _stringOrIdent 
  0:   On '=' to state 45


State 14:
49: option -> _baseclassheader  . '=' _stringOrIdent 
  0:   On '=' to state 46


State 15:
50: option -> _classheader  . '=' _stringOrIdent 
  0:   On '=' to state 47


State 16:
51: option -> _implementationheader  . '=' _stringOrIdent 
  0:   On '=' to state 48


State 17:
52: option -> _lexsource  . '=' _stringOrIdent 
  0:   On '=' to state 49


State 18:
53: option -> _skeleton_directory  . '=' _stringOrIdent 
  0:   On '=' to state 50


State 19:
54: option -> _namespace  . '=' _stringOrIdent 
  0:   On '=' to state 51


State 20:
55: option -> INTERACTIVE  . 
  Reduce by 55: option -> INTERACTIVE  . 


State 21:
56: option -> DEBUG  . _opt_debugnamelist 
  0:   On _opt_debugnamelist to state 52
  1:   On _m_debugnamelist to state 53
  Reduce by 38: _opt_debugnamelist ->  . 
  Reduce by 36: _m_debugnamelist ->  . 


State 22:
57: option -> DEBUG_STEPS  . _opt_steprange 
  0:   On _opt_steprange to state 54
  1:   On _m_debugsteps to state 55
  Reduce by 44: _opt_steprange ->  . 
  Reduce by 42: _m_debugsteps ->  . 


State 23:
58: option -> NOLINES  . 
  Reduce by 58: option -> NOLINES  . 


State 24:
8: _start_condition_directive -> _start_condition_type  . _start_condition_names 
  0:   On _start_condition_names to state 56
  1:   On identifier to state 57
  2:   On IDENTIFIER to state 39


State 25:
10: _name_definition -> _name_def  . STRING 
  0:   On STRING to state 58


State 26:
19: _inputinterface -> INPUTINTERFACE  . 
  Reduce by 19: _inputinterface -> INPUTINTERFACE  . 


State 27:
20: _inputimplementation -> INPUTIMPLEMENTATION  . 
  Reduce by 20: _inputimplementation -> INPUTIMPLEMENTATION  . 


State 28:
21: _classname -> CLASSNAME  . 
  Reduce by 21: _classname -> CLASSNAME  . 


State 29:
22: _lexfunctionname -> LEXFUNCTIONNAME  . 
  Reduce by 22: _lexfunctionname -> LEXFUNCTIONNAME  . 


State 30:
23: _baseclassheader -> BASECLASSHEADER  . 
  Reduce by 23: _baseclassheader -> BASECLASSHEADER  . 


State 31:
24: _classheader -> CLASSHEADER  . 
  Reduce by 24: _classheader -> CLASSHEADER  . 


State 32:
25: _implementationheader -> IMPLEMENTATIONHEADER  . 
  Reduce by 25: _implementationheader -> IMPLEMENTATIONHEADER  . 


State 33:
26: _lexsource -> LEXSOURCE  . 
  Reduce by 26: _lexsource -> LEXSOURCE  . 


State 34:
27: _skeleton_directory -> SKELETON_DIRECTORY  . 
  Reduce by 27: _skeleton_directory -> SKELETON_DIRECTORY  . 


State 35:
28: _namespace -> NAMESPACE  . 
  Reduce by 28: _namespace -> NAMESPACE  . 


State 36:
4: _start_condition_type -> INCL_START_CONDITION  . _sc_name 
  0:   On _sc_name to state 59
  Reduce by 3: _sc_name ->  . 


State 37:
5: _start_condition_type -> EXCL_START_CONDITION  . _sc_name 
  0:   On _sc_name to state 60
  Reduce by 3: _sc_name ->  . 


State 38:
9: _name_def -> identifier  . 
  Reduce by 9: _name_def -> identifier  . 


State 39:
2: identifier -> IDENTIFIER  . 
  Reduce by 2: identifier -> IDENTIFIER  . 


State 40:
1: input -> opt_directives SECTION_DELIMITER rules  . 
143: rules -> rules  . _rule 
  0:   On _rule to state 61
  1:   On _rule_def to state 62
  2:   On _error_ to state 63
  3:   On _optMs_regex_list to state 64
  4:   On _ms_block to state 65
  5:   On EOF_PATTERN to state 66
  6:   On _optMs_regex to state 67
  7:   On _miniscanner to state 68
  8:   On _regex to state 69
  9:   On '<' to state 70
  10:   On _p_regex to state 71
  11:   On _simple_regex to state 72
  12:   On _combi_chars to state 73
  13:   On '(' to state 74
  14:   On _characterclass to state 75
  15:   On STRING to state 76
  16:   On DECIMAL to state 77
  17:   On ESCAPE_SEQUENCE to state 78
  18:   On identifier to state 79
  19:   On CHAR to state 80
  20:   On '.' to state 81
  21:   On ',' to state 82
  22:   On '^' to state 83
  23:   On '$' to state 84
  24:   On '=' to state 85
  25:   On '-' to state 86
  26:   On ''' to state 87
  27:   On _cc_set to state 88
  28:   On IDENTIFIER to state 39
  29:   On _cc_start to state 89
  30:   On _cc_negated to state 90
  31:   On CC_START to state 91
  32:   On CC_NEGATED to state 92
  Reduce by 1: input -> opt_directives SECTION_DELIMITER rules  . 
  Reduce by 135: _rule_def ->  . 


State 41:
16: _directive_line -> _directive '\x0a'  . 
  Reduce by 16: _directive_line -> _directive '\x0a'  . 


State 42:
45: option -> _inputinterface '='  . _stringOrIdent 
  0:   On _stringOrIdent to state 93
  1:   On STRING to state 94
  2:   On IDENTIFIER to state 95


State 43:
46: option -> _inputimplementation '='  . _stringOrIdent 
  0:   On _stringOrIdent to state 96
  1:   On STRING to state 94
  2:   On IDENTIFIER to state 95


State 44:
47: option -> _classname '='  . _stringOrIdent 
  0:   On _stringOrIdent to state 97
  1:   On STRING to state 94
  2:   On IDENTIFIER to state 95


State 45:
48: option -> _lexfunctionname '='  . _stringOrIdent 
  0:   On _stringOrIdent to state 98
  1:   On STRING to state 94
  2:   On IDENTIFIER to state 95


State 46:
49: option -> _baseclassheader '='  . _stringOrIdent 
  0:   On _stringOrIdent to state 99
  1:   On STRING to state 94
  2:   On IDENTIFIER to state 95


State 47:
50: option -> _classheader '='  . _stringOrIdent 
  0:   On _stringOrIdent to state 100
  1:   On STRING to state 94
  2:   On IDENTIFIER to state 95


State 48:
51: option -> _implementationheader '='  . _stringOrIdent 
  0:   On _stringOrIdent to state 101
  1:   On STRING to state 94
  2:   On IDENTIFIER to state 95


State 49:
52: option -> _lexsource '='  . _stringOrIdent 
  0:   On _stringOrIdent to state 102
  1:   On STRING to state 94
  2:   On IDENTIFIER to state 95


State 50:
53: option -> _skeleton_directory '='  . _stringOrIdent 
  0:   On _stringOrIdent to state 103
  1:   On STRING to state 94
  2:   On IDENTIFIER to state 95


State 51:
54: option -> _namespace '='  . _stringOrIdent 
  0:   On _stringOrIdent to state 104
  1:   On STRING to state 94
  2:   On IDENTIFIER to state 95


State 52:
56: option -> DEBUG _opt_debugnamelist  . 
  Reduce by 56: option -> DEBUG _opt_debugnamelist  . 


State 53:
37: _opt_debugnamelist -> _m_debugnamelist  . '=' _debugnamelist 
  0:   On '=' to state 105


State 54:
57: option -> DEBUG_STEPS _opt_steprange  . 
  Reduce by 57: option -> DEBUG_STEPS _opt_steprange  . 


State 55:
43: _opt_steprange -> _m_debugsteps  . '=' _firststep _opt_laststep 
  0:   On '=' to state 106


State 56:
8: _start_condition_directive -> _start_condition_type _start_condition_names  . 
6: _start_condition_names -> _start_condition_names  . identifier 
  0:   On identifier to state 107
  1:   On IDENTIFIER to state 39
  Reduce by 8: _start_condition_directive -> _start_condition_type _start_condition_names  . 


State 57:
7: _start_condition_names -> identifier  . 
  Reduce by 7: _start_condition_names -> identifier  . 


State 58:
10: _name_definition -> _name_def STRING  . 
  Reduce by 10: _name_definition -> _name_def STRING  . 


State 59:
4: _start_condition_type -> INCL_START_CONDITION _sc_name  . 
  Reduce by 4: _start_condition_type -> INCL_START_CONDITION _sc_name  . 


State 60:
5: _start_condition_type -> EXCL_START_CONDITION _sc_name  . 
  Reduce by 5: _start_condition_type -> EXCL_START_CONDITION _sc_name  . 


State 61:
143: rules -> rules _rule  . 
  Reduce by 143: rules -> rules _rule  . 


State 62:
142: _rule -> _rule_def  . '\x0a' 
  0:   On '\x0a' to state 108


State 63:
136: _rule_def -> _error_  . 
  Reduce by 136: _rule_def -> _error_  . 


State 64:
137: _rule_def -> _optMs_regex_list  . 
138: _rule_def -> _optMs_regex_list  . _block 
121: _optMs_regex_list -> _optMs_regex_list  . ORNL _optMs_regex_list 
  0:   On _block to state 109
  1:   On ORNL to state 110
  2:   On BLOCK to state 111
  Reduce by 137: _rule_def -> _optMs_regex_list  . 


State 65:
139: _rule_def -> _ms_block  . 
  Reduce by 139: _rule_def -> _ms_block  . 


State 66:
140: _rule_def -> EOF_PATTERN  . 
141: _rule_def -> EOF_PATTERN  . _block 
  0:   On _block to state 112
  1:   On BLOCK to state 111
  Reduce by 140: _rule_def -> EOF_PATTERN  . 


State 67:
122: _optMs_regex_list -> _optMs_regex  . 
  Reduce by 122: _optMs_regex_list -> _optMs_regex  . 


State 68:
134: _ms_block -> _miniscanner  . '{' _msBlock_rules _msBlock_rule_def '}' 
119: _optMs_regex -> _miniscanner  . _regex 
  0:   On '{' to state 113
  1:   On _regex to state 114
  2:   On _p_regex to state 71
  3:   On _simple_regex to state 72
  4:   On _combi_chars to state 73
  5:   On '(' to state 74
  6:   On _characterclass to state 75
  7:   On STRING to state 76
  8:   On DECIMAL to state 77
  9:   On ESCAPE_SEQUENCE to state 78
  10:   On identifier to state 79
  11:   On CHAR to state 80
  12:   On '.' to state 81
  13:   On ',' to state 82
  14:   On '^' to state 83
  15:   On '$' to state 84
  16:   On '=' to state 85
  17:   On '-' to state 86
  18:   On ''' to state 87
  19:   On _cc_set to state 88
  20:   On IDENTIFIER to state 39
  21:   On _cc_start to state 89
  22:   On _cc_negated to state 90
  23:   On CC_START to state 91
  24:   On CC_NEGATED to state 92


State 69:
120: _optMs_regex -> _regex  . 
  Reduce by 120: _optMs_regex -> _regex  . 


State 70:
63: _miniscanner -> '<'  . _miniscanner_specs '>' 
  0:   On _miniscanner_specs to state 115
  1:   On '*' to state 116
  2:   On _miniscanner_list to state 117
  3:   On identifier to state 118
  4:   On IDENTIFIER to state 39


State 71:
117: _regex -> _p_regex  . 
118: _regex -> _p_regex  . '/' _p_regex 
  0:   On '/' to state 119
  Reduce by 117: _regex -> _p_regex  . 


State 72:
116: _p_regex -> _simple_regex  . 
111: _simple_regex -> _simple_regex  . _simple_regex 
112: _simple_regex -> _simple_regex  . '|' _simple_regex 
114: _simple_regex -> _simple_regex  . _quantifier 
  0:   On _simple_regex to state 120
  1:   On '|' to state 121
  2:   On _quantifier to state 122
  3:   On _combi_chars to state 73
  4:   On '(' to state 74
  5:   On _characterclass to state 75
  6:   On '*' to state 123
  7:   On '+' to state 124
  8:   On '?' to state 125
  9:   On '{' to state 126
  10:   On STRING to state 76
  11:   On DECIMAL to state 77
  12:   On ESCAPE_SEQUENCE to state 78
  13:   On identifier to state 79
  14:   On CHAR to state 80
  15:   On '.' to state 81
  16:   On ',' to state 82
  17:   On '^' to state 83
  18:   On '$' to state 84
  19:   On '=' to state 85
  20:   On '-' to state 86
  21:   On ''' to state 87
  22:   On _cc_set to state 88
  23:   On IDENTIFIER to state 39
  24:   On _cc_start to state 89
  25:   On _cc_negated to state 90
  26:   On CC_START to state 91
  27:   On CC_NEGATED to state 92
  Reduce by 116: _p_regex -> _simple_regex  . 


State 73:
110: _simple_regex -> _combi_chars  . 
  Reduce by 110: _simple_regex -> _combi_chars  . 


State 74:
113: _simple_regex -> '('  . _simple_regex ')' 
  0:   On _simple_regex to state 127
  1:   On _combi_chars to state 73
  2:   On '(' to state 74
  3:   On _characterclass to state 75
  4:   On STRING to state 76
  5:   On DECIMAL to state 77
  6:   On ESCAPE_SEQUENCE to state 78
  7:   On identifier to state 79
  8:   On CHAR to state 80
  9:   On '.' to state 81
  10:   On ',' to state 82
  11:   On '^' to state 83
  12:   On '$' to state 84
  13:   On '=' to state 85
  14:   On '-' to state 86
  15:   On ''' to state 87
  16:   On _cc_set to state 88
  17:   On IDENTIFIER to state 39
  18:   On _cc_start to state 89
  19:   On _cc_negated to state 90
  20:   On CC_START to state 91
  21:   On CC_NEGATED to state 92


State 75:
115: _simple_regex -> _characterclass  . 
107: _characterclass -> _characterclass  . CC_PLUS _characterclass 
108: _characterclass -> _characterclass  . CC_MINUS _characterclass 
  0:   On CC_PLUS to state 128
  1:   On CC_MINUS to state 129
  Reduce by 115: _simple_regex -> _characterclass  . 


State 76:
64: _combi_chars -> STRING  . 
  Reduce by 64: _combi_chars -> STRING  . 


State 77:
65: _combi_chars -> DECIMAL  . 
  Reduce by 65: _combi_chars -> DECIMAL  . 


State 78:
66: _combi_chars -> ESCAPE_SEQUENCE  . 
  Reduce by 66: _combi_chars -> ESCAPE_SEQUENCE  . 


State 79:
67: _combi_chars -> identifier  . 
  Reduce by 67: _combi_chars -> identifier  . 


State 80:
68: _combi_chars -> CHAR  . 
  Reduce by 68: _combi_chars -> CHAR  . 


State 81:
69: _combi_chars -> '.'  . 
  Reduce by 69: _combi_chars -> '.'  . 


State 82:
70: _combi_chars -> ','  . 
  Reduce by 70: _combi_chars -> ','  . 


State 83:
71: _combi_chars -> '^'  . 
  Reduce by 71: _combi_chars -> '^'  . 


State 84:
72: _combi_chars -> '$'  . 
  Reduce by 72: _combi_chars -> '$'  . 


State 85:
73: _combi_chars -> '='  . 
  Reduce by 73: _combi_chars -> '='  . 


State 86:
74: _combi_chars -> '-'  . 
  Reduce by 74: _combi_chars -> '-'  . 


State 87:
75: _combi_chars -> '''  . 
  Reduce by 75: _combi_chars -> '''  . 


State 88:
109: _characterclass -> _cc_set  . 
  Reduce by 109: _characterclass -> _cc_set  . 


State 89:
105: _cc_set -> _cc_start  . _cc_contents _cc_end 
  0:   On _cc_contents to state 130
  1:   On _cc_element to state 131
  2:   On _combi_chars to state 132
  3:   On PREDEFINED_CLASS to state 133
  4:   On _cc_char to state 134
  5:   On STRING to state 76
  6:   On DECIMAL to state 77
  7:   On ESCAPE_SEQUENCE to state 78
  8:   On identifier to state 79
  9:   On CHAR to state 80
  10:   On '.' to state 81
  11:   On ',' to state 82
  12:   On '^' to state 83
  13:   On '$' to state 84
  14:   On '=' to state 85
  15:   On '-' to state 86
  16:   On ''' to state 87
  17:   On '/' to state 135
  18:   On '|' to state 136
  19:   On '(' to state 137
  20:   On ')' to state 138
  21:   On '*' to state 139
  22:   On '+' to state 140
  23:   On '?' to state 141
  24:   On '{' to state 142
  25:   On '}' to state 143
  26:   On '<' to state 144
  27:   On '>' to state 145
  28:   On '[' to state 146
  29:   On IDENTIFIER to state 39


State 90:
106: _cc_set -> _cc_negated  . _cc_contents _cc_end 
  0:   On _cc_contents to state 147
  1:   On _cc_element to state 131
  2:   On _combi_chars to state 132
  3:   On PREDEFINED_CLASS to state 133
  4:   On _cc_char to state 134
  5:   On STRING to state 76
  6:   On DECIMAL to state 77
  7:   On ESCAPE_SEQUENCE to state 78
  8:   On identifier to state 79
  9:   On CHAR to state 80
  10:   On '.' to state 81
  11:   On ',' to state 82
  12:   On '^' to state 83
  13:   On '$' to state 84
  14:   On '=' to state 85
  15:   On '-' to state 86
  16:   On ''' to state 87
  17:   On '/' to state 135
  18:   On '|' to state 136
  19:   On '(' to state 137
  20:   On ')' to state 138
  21:   On '*' to state 139
  22:   On '+' to state 140
  23:   On '?' to state 141
  24:   On '{' to state 142
  25:   On '}' to state 143
  26:   On '<' to state 144
  27:   On '>' to state 145
  28:   On '[' to state 146
  29:   On IDENTIFIER to state 39


State 91:
85: _cc_start -> CC_START  . _m_contents 
  0:   On _m_contents to state 148
  Reduce by 84: _m_contents ->  . 


State 92:
86: _cc_negated -> CC_NEGATED  . _m_contents 
  0:   On _m_contents to state 149
  Reduce by 84: _m_contents ->  . 


State 93:
45: option -> _inputinterface '=' _stringOrIdent  . 
  Reduce by 45: option -> _inputinterface '=' _stringOrIdent  . 


State 94:
29: _stringOrIdent -> STRING  . 
  Reduce by 29: _stringOrIdent -> STRING  . 


State 95:
30: _stringOrIdent -> IDENTIFIER  . 
  Reduce by 30: _stringOrIdent -> IDENTIFIER  . 


State 96:
46: option -> _inputimplementation '=' _stringOrIdent  . 
  Reduce by 46: option -> _inputimplementation '=' _stringOrIdent  . 


State 97:
47: option -> _classname '=' _stringOrIdent  . 
  Reduce by 47: option -> _classname '=' _stringOrIdent  . 


State 98:
48: option -> _lexfunctionname '=' _stringOrIdent  . 
  Reduce by 48: option -> _lexfunctionname '=' _stringOrIdent  . 


State 99:
49: option -> _baseclassheader '=' _stringOrIdent  . 
  Reduce by 49: option -> _baseclassheader '=' _stringOrIdent  . 


State 100:
50: option -> _classheader '=' _stringOrIdent  . 
  Reduce by 50: option -> _classheader '=' _stringOrIdent  . 


State 101:
51: option -> _implementationheader '=' _stringOrIdent  . 
  Reduce by 51: option -> _implementationheader '=' _stringOrIdent  . 


State 102:
52: option -> _lexsource '=' _stringOrIdent  . 
  Reduce by 52: option -> _lexsource '=' _stringOrIdent  . 


State 103:
53: option -> _skeleton_directory '=' _stringOrIdent  . 
  Reduce by 53: option -> _skeleton_directory '=' _stringOrIdent  . 


State 104:
54: option -> _namespace '=' _stringOrIdent  . 
  Reduce by 54: option -> _namespace '=' _stringOrIdent  . 


State 105:
37: _opt_debugnamelist -> _m_debugnamelist '='  . _debugnamelist 
  0:   On _debugnamelist to state 150
  1:   On _debugname to state 151
  2:   On IDENTIFIER to state 152


State 106:
43: _opt_steprange -> _m_debugsteps '='  . _firststep _opt_laststep 
  0:   On _firststep to state 153
  1:   On DECIMAL to state 154


State 107:
6: _start_condition_names -> _start_condition_names identifier  . 
  Reduce by 6: _start_condition_names -> _start_condition_names identifier  . 


State 108:
142: _rule -> _rule_def '\x0a'  . 
  Reduce by 142: _rule -> _rule_def '\x0a'  . 


State 109:
138: _rule_def -> _optMs_regex_list _block  . 
  Reduce by 138: _rule_def -> _optMs_regex_list _block  . 


State 110:
121: _optMs_regex_list -> _optMs_regex_list ORNL  . _optMs_regex_list 
  0:   On _optMs_regex_list to state 155
  1:   On _optMs_regex to state 67
  2:   On _miniscanner to state 156
  3:   On _regex to state 69
  4:   On '<' to state 70
  5:   On _p_regex to state 71
  6:   On _simple_regex to state 72
  7:   On _combi_chars to state 73
  8:   On '(' to state 74
  9:   On _characterclass to state 75
  10:   On STRING to state 76
  11:   On DECIMAL to state 77
  12:   On ESCAPE_SEQUENCE to state 78
  13:   On identifier to state 79
  14:   On CHAR to state 80
  15:   On '.' to state 81
  16:   On ',' to state 82
  17:   On '^' to state 83
  18:   On '$' to state 84
  19:   On '=' to state 85
  20:   On '-' to state 86
  21:   On ''' to state 87
  22:   On _cc_set to state 88
  23:   On IDENTIFIER to state 39
  24:   On _cc_start to state 89
  25:   On _cc_negated to state 90
  26:   On CC_START to state 91
  27:   On CC_NEGATED to state 92


State 111:
123: _block -> BLOCK  . 
  Reduce by 123: _block -> BLOCK  . 


State 112:
141: _rule_def -> EOF_PATTERN _block  . 
  Reduce by 141: _rule_def -> EOF_PATTERN _block  . 


State 113:
134: _ms_block -> _miniscanner '{'  . _msBlock_rules _msBlock_rule_def '}' 
  0:   On _msBlock_rules to state 157
  Reduce by 133: _msBlock_rules ->  . 


State 114:
119: _optMs_regex -> _miniscanner _regex  . 
  Reduce by 119: _optMs_regex -> _miniscanner _regex  . 


State 115:
63: _miniscanner -> '<' _miniscanner_specs  . '>' 
  0:   On '>' to state 158


State 116:
61: _miniscanner_specs -> '*'  . 
  Reduce by 61: _miniscanner_specs -> '*'  . 


State 117:
62: _miniscanner_specs -> _miniscanner_list  . 
59: _miniscanner_list -> _miniscanner_list  . ',' identifier 
  0:   On ',' to state 159
  Reduce by 62: _miniscanner_specs -> _miniscanner_list  . 


State 118:
60: _miniscanner_list -> identifier  . 
  Reduce by 60: _miniscanner_list -> identifier  . 


State 119:
118: _regex -> _p_regex '/'  . _p_regex 
  0:   On _p_regex to state 160
  1:   On _simple_regex to state 72
  2:   On _combi_chars to state 73
  3:   On '(' to state 74
  4:   On _characterclass to state 75
  5:   On STRING to state 76
  6:   On DECIMAL to state 77
  7:   On ESCAPE_SEQUENCE to state 78
  8:   On identifier to state 79
  9:   On CHAR to state 80
  10:   On '.' to state 81
  11:   On ',' to state 82
  12:   On '^' to state 83
  13:   On '$' to state 84
  14:   On '=' to state 85
  15:   On '-' to state 86
  16:   On ''' to state 87
  17:   On _cc_set to state 88
  18:   On IDENTIFIER to state 39
  19:   On _cc_start to state 89
  20:   On _cc_negated to state 90
  21:   On CC_START to state 91
  22:   On CC_NEGATED to state 92


State 120:
111: _simple_regex -> _simple_regex _simple_regex  . 
111: _simple_regex -> _simple_regex  . _simple_regex 
112: _simple_regex -> _simple_regex  . '|' _simple_regex 
114: _simple_regex -> _simple_regex  . _quantifier 
  0:   On _simple_regex to state 120
  1 (removed by precedence):   On '|' to state 121
  2:   On _quantifier to state 122
  3:   On _combi_chars to state 73
  4 (removed by precedence):   On '(' to state 74
  5:   On _characterclass to state 75
  6 (removed by precedence):   On '*' to state 123
  7 (removed by precedence):   On '+' to state 124
  8 (removed by precedence):   On '?' to state 125
  9 (removed by precedence):   On '{' to state 126
  10 (removed by precedence):   On STRING to state 76
  11 (removed by precedence):   On DECIMAL to state 77
  12 (removed by precedence):   On ESCAPE_SEQUENCE to state 78
  13:   On identifier to state 79
  14 (removed by precedence):   On CHAR to state 80
  15 (removed by precedence):   On '.' to state 81
  16 (removed by precedence):   On ',' to state 82
  17 (removed by precedence):   On '^' to state 83
  18 (removed by precedence):   On '$' to state 84
  19 (removed by precedence):   On '=' to state 85
  20 (removed by precedence):   On '-' to state 86
  21 (removed by precedence):   On ''' to state 87
  22:   On _cc_set to state 88
  23 (removed by precedence):   On IDENTIFIER to state 39
  24:   On _cc_start to state 89
  25:   On _cc_negated to state 90
  26 (removed by precedence):   On CC_START to state 91
  27 (removed by precedence):   On CC_NEGATED to state 92
  Reduce by 111: _simple_regex -> _simple_regex _simple_regex  . 


State 121:
112: _simple_regex -> _simple_regex '|'  . _simple_regex 
  0:   On _simple_regex to state 161
  1:   On _combi_chars to state 73
  2:   On '(' to state 74
  3:   On _characterclass to state 75
  4:   On STRING to state 76
  5:   On DECIMAL to state 77
  6:   On ESCAPE_SEQUENCE to state 78
  7:   On identifier to state 79
  8:   On CHAR to state 80
  9:   On '.' to state 81
  10:   On ',' to state 82
  11:   On '^' to state 83
  12:   On '$' to state 84
  13:   On '=' to state 85
  14:   On '-' to state 86
  15:   On ''' to state 87
  16:   On _cc_set to state 88
  17:   On IDENTIFIER to state 39
  18:   On _cc_start to state 89
  19:   On _cc_negated to state 90
  20:   On CC_START to state 91
  21:   On CC_NEGATED to state 92


State 122:
114: _simple_regex -> _simple_regex _quantifier  . 
  Reduce by 114: _simple_regex -> _simple_regex _quantifier  . 


State 123:
80: _quantifier -> '*'  . 
  Reduce by 80: _quantifier -> '*'  . 


State 124:
81: _quantifier -> '+'  . 
  Reduce by 81: _quantifier -> '+'  . 


State 125:
82: _quantifier -> '?'  . 
  Reduce by 82: _quantifier -> '?'  . 


State 126:
83: _quantifier -> '{'  . _interval '}' 
  0:   On _interval to state 162
  1:   On DECIMAL to state 163
  2:   On _decimal to state 164


State 127:
113: _simple_regex -> '(' _simple_regex  . ')' 
111: _simple_regex -> _simple_regex  . _simple_regex 
112: _simple_regex -> _simple_regex  . '|' _simple_regex 
114: _simple_regex -> _simple_regex  . _quantifier 
  0:   On ')' to state 165
  1:   On _simple_regex to state 120
  2:   On '|' to state 121
  3:   On _quantifier to state 122
  4:   On _combi_chars to state 73
  5:   On '(' to state 74
  6:   On _characterclass to state 75
  7:   On '*' to state 123
  8:   On '+' to state 124
  9:   On '?' to state 125
  10:   On '{' to state 126
  11:   On STRING to state 76
  12:   On DECIMAL to state 77
  13:   On ESCAPE_SEQUENCE to state 78
  14:   On identifier to state 79
  15:   On CHAR to state 80
  16:   On '.' to state 81
  17:   On ',' to state 82
  18:   On '^' to state 83
  19:   On '$' to state 84
  20:   On '=' to state 85
  21:   On '-' to state 86
  22:   On ''' to state 87
  23:   On _cc_set to state 88
  24:   On IDENTIFIER to state 39
  25:   On _cc_start to state 89
  26:   On _cc_negated to state 90
  27:   On CC_START to state 91
  28:   On CC_NEGATED to state 92


State 128:
107: _characterclass -> _characterclass CC_PLUS  . _characterclass 
  0:   On _characterclass to state 166
  1:   On _cc_set to state 88
  2:   On _cc_start to state 89
  3:   On _cc_negated to state 90
  4:   On CC_START to state 91
  5:   On CC_NEGATED to state 92


State 129:
108: _characterclass -> _characterclass CC_MINUS  . _characterclass 
  0:   On _characterclass to state 167
  1:   On _cc_set to state 88
  2:   On _cc_start to state 89
  3:   On _cc_negated to state 90
  4:   On CC_START to state 91
  5:   On CC_NEGATED to state 92


State 130:
105: _cc_set -> _cc_start _cc_contents  . _cc_end 
103: _cc_contents -> _cc_contents  . _cc_element 
  0:   On _cc_end to state 168
  1:   On _cc_element to state 169
  2:   On ']' to state 170
  3:   On _combi_chars to state 132
  4:   On PREDEFINED_CLASS to state 133
  5:   On _cc_char to state 134
  6:   On STRING to state 76
  7:   On DECIMAL to state 77
  8:   On ESCAPE_SEQUENCE to state 78
  9:   On identifier to state 79
  10:   On CHAR to state 80
  11:   On '.' to state 81
  12:   On ',' to state 82
  13:   On '^' to state 83
  14:   On '$' to state 84
  15:   On '=' to state 85
  16:   On '-' to state 86
  17:   On ''' to state 87
  18:   On '/' to state 135
  19:   On '|' to state 136
  20:   On '(' to state 137
  21:   On ')' to state 138
  22:   On '*' to state 139
  23:   On '+' to state 140
  24:   On '?' to state 141
  25:   On '{' to state 142
  26:   On '}' to state 143
  27:   On '<' to state 144
  28:   On '>' to state 145
  29:   On '[' to state 146
  30:   On IDENTIFIER to state 39


State 131:
104: _cc_contents -> _cc_element  . 
  Reduce by 104: _cc_contents -> _cc_element  . 


State 132:
100: _cc_element -> _combi_chars  . 
  Reduce by 100: _cc_element -> _combi_chars  . 


State 133:
101: _cc_element -> PREDEFINED_CLASS  . 
  Reduce by 101: _cc_element -> PREDEFINED_CLASS  . 


State 134:
102: _cc_element -> _cc_char  . 
  Reduce by 102: _cc_element -> _cc_char  . 


State 135:
88: _cc_char -> '/'  . 
  Reduce by 88: _cc_char -> '/'  . 


State 136:
89: _cc_char -> '|'  . 
  Reduce by 89: _cc_char -> '|'  . 


State 137:
90: _cc_char -> '('  . 
  Reduce by 90: _cc_char -> '('  . 


State 138:
91: _cc_char -> ')'  . 
  Reduce by 91: _cc_char -> ')'  . 


State 139:
92: _cc_char -> '*'  . 
  Reduce by 92: _cc_char -> '*'  . 


State 140:
93: _cc_char -> '+'  . 
  Reduce by 93: _cc_char -> '+'  . 


State 141:
94: _cc_char -> '?'  . 
  Reduce by 94: _cc_char -> '?'  . 


State 142:
95: _cc_char -> '{'  . 
  Reduce by 95: _cc_char -> '{'  . 


State 143:
96: _cc_char -> '}'  . 
  Reduce by 96: _cc_char -> '}'  . 


State 144:
97: _cc_char -> '<'  . 
  Reduce by 97: _cc_char -> '<'  . 


State 145:
98: _cc_char -> '>'  . 
  Reduce by 98: _cc_char -> '>'  . 


State 146:
99: _cc_char -> '['  . 
  Reduce by 99: _cc_char -> '['  . 


State 147:
106: _cc_set -> _cc_negated _cc_contents  . _cc_end 
103: _cc_contents -> _cc_contents  . _cc_element 
  0:   On _cc_end to state 171
  1:   On _cc_element to state 169
  2:   On ']' to state 170
  3:   On _combi_chars to state 132
  4:   On PREDEFINED_CLASS to state 133
  5:   On _cc_char to state 134
  6:   On STRING to state 76
  7:   On DECIMAL to state 77
  8:   On ESCAPE_SEQUENCE to state 78
  9:   On identifier to state 79
  10:   On CHAR to state 80
  11:   On '.' to state 81
  12:   On ',' to state 82
  13:   On '^' to state 83
  14:   On '$' to state 84
  15:   On '=' to state 85
  16:   On '-' to state 86
  17:   On ''' to state 87
  18:   On '/' to state 135
  19:   On '|' to state 136
  20:   On '(' to state 137
  21:   On ')' to state 138
  22:   On '*' to state 139
  23:   On '+' to state 140
  24:   On '?' to state 141
  25:   On '{' to state 142
  26:   On '}' to state 143
  27:   On '<' to state 144
  28:   On '>' to state 145
  29:   On '[' to state 146
  30:   On IDENTIFIER to state 39


State 148:
85: _cc_start -> CC_START _m_contents  . 
  Reduce by 85: _cc_start -> CC_START _m_contents  . 


State 149:
86: _cc_negated -> CC_NEGATED _m_contents  . 
  Reduce by 86: _cc_negated -> CC_NEGATED _m_contents  . 


State 150:
37: _opt_debugnamelist -> _m_debugnamelist '=' _debugnamelist  . 
34: _debugnamelist -> _debugnamelist  . _opt_comma _debugname 
  0:   On _opt_comma to state 172
  1:   On ',' to state 173
  Reduce by 37: _opt_debugnamelist -> _m_debugnamelist '=' _debugnamelist  . 
  Reduce by 32: _opt_comma ->  . 


State 151:
35: _debugnamelist -> _debugname  . 
  Reduce by 35: _debugnamelist -> _debugname  . 


State 152:
33: _debugname -> IDENTIFIER  . 
  Reduce by 33: _debugname -> IDENTIFIER  . 


State 153:
43: _opt_steprange -> _m_debugsteps '=' _firststep  . _opt_laststep 
  0:   On _opt_laststep to state 174
  1:   On DECIMAL to state 175
  Reduce by 40: _opt_laststep ->  . 


State 154:
39: _firststep -> DECIMAL  . 
  Reduce by 39: _firststep -> DECIMAL  . 


State 155:
121: _optMs_regex_list -> _optMs_regex_list ORNL _optMs_regex_list  . 
121: _optMs_regex_list -> _optMs_regex_list  . ORNL _optMs_regex_list 
  0 (removed by precedence):   On ORNL to state 110
  Reduce by 121: _optMs_regex_list -> _optMs_regex_list ORNL _optMs_regex_list  . 


State 156:
119: _optMs_regex -> _miniscanner  . _regex 
  0:   On _regex to state 114
  1:   On _p_regex to state 71
  2:   On _simple_regex to state 72
  3:   On _combi_chars to state 73
  4:   On '(' to state 74
  5:   On _characterclass to state 75
  6:   On STRING to state 76
  7:   On DECIMAL to state 77
  8:   On ESCAPE_SEQUENCE to state 78
  9:   On identifier to state 79
  10:   On CHAR to state 80
  11:   On '.' to state 81
  12:   On ',' to state 82
  13:   On '^' to state 83
  14:   On '$' to state 84
  15:   On '=' to state 85
  16:   On '-' to state 86
  17:   On ''' to state 87
  18:   On _cc_set to state 88
  19:   On IDENTIFIER to state 39
  20:   On _cc_start to state 89
  21:   On _cc_negated to state 90
  22:   On CC_START to state 91
  23:   On CC_NEGATED to state 92


State 157:
134: _ms_block -> _miniscanner '{' _msBlock_rules  . _msBlock_rule_def '}' 
132: _msBlock_rules -> _msBlock_rules  . _msBlock_rule 
  0:   On _msBlock_rule_def to state 176
  1:   On _msBlock_rule to state 177
  2:   On _regex_list to state 178
  3:   On EOF_PATTERN to state 179
  4:   On _regex to state 180
  5:   On _p_regex to state 71
  6:   On _simple_regex to state 72
  7:   On _combi_chars to state 73
  8:   On '(' to state 74
  9:   On _characterclass to state 75
  10:   On STRING to state 76
  11:   On DECIMAL to state 77
  12:   On ESCAPE_SEQUENCE to state 78
  13:   On identifier to state 79
  14:   On CHAR to state 80
  15:   On '.' to state 81
  16:   On ',' to state 82
  17:   On '^' to state 83
  18:   On '$' to state 84
  19:   On '=' to state 85
  20:   On '-' to state 86
  21:   On ''' to state 87
  22:   On _cc_set to state 88
  23:   On IDENTIFIER to state 39
  24:   On _cc_start to state 89
  25:   On _cc_negated to state 90
  26:   On CC_START to state 91
  27:   On CC_NEGATED to state 92
  Reduce by 126: _msBlock_rule_def ->  . 


State 158:
63: _miniscanner -> '<' _miniscanner_specs '>'  . 
  Reduce by 63: _miniscanner -> '<' _miniscanner_specs '>'  . 


State 159:
59: _miniscanner_list -> _miniscanner_list ','  . identifier 
  0:   On identifier to state 181
  1:   On IDENTIFIER to state 39


State 160:
118: _regex -> _p_regex '/' _p_regex  . 
  Reduce by 118: _regex -> _p_regex '/' _p_regex  . 


State 161:
112: _simple_regex -> _simple_regex '|' _simple_regex  . 
111: _simple_regex -> _simple_regex  . _simple_regex 
112: _simple_regex -> _simple_regex  . '|' _simple_regex 
114: _simple_regex -> _simple_regex  . _quantifier 
  0:   On _simple_regex to state 120
  1 (removed by precedence):   On '|' to state 121
  2:   On _quantifier to state 122
  3:   On _combi_chars to state 73
  4 (removed by precedence):   On '(' to state 74
  5:   On _characterclass to state 75
  6 (removed by precedence):   On '*' to state 123
  7 (removed by precedence):   On '+' to state 124
  8 (removed by precedence):   On '?' to state 125
  9 (removed by precedence):   On '{' to state 126
  10 (removed by precedence):   On STRING to state 76
  11 (removed by precedence):   On DECIMAL to state 77
  12 (removed by precedence):   On ESCAPE_SEQUENCE to state 78
  13:   On identifier to state 79
  14:   On CHAR to state 80
  15 (removed by precedence):   On '.' to state 81
  16 (removed by precedence):   On ',' to state 82
  17 (removed by precedence):   On '^' to state 83
  18 (removed by precedence):   On '$' to state 84
  19 (removed by precedence):   On '=' to state 85
  20 (removed by precedence):   On '-' to state 86
  21 (removed by precedence):   On ''' to state 87
  22:   On _cc_set to state 88
  23 (removed by precedence):   On IDENTIFIER to state 39
  24:   On _cc_start to state 89
  25:   On _cc_negated to state 90
  26 (removed by precedence):   On CC_START to state 91
  27 (removed by precedence):   On CC_NEGATED to state 92
  Reduce by 112: _simple_regex -> _simple_regex '|' _simple_regex  . 


State 162:
83: _quantifier -> '{' _interval  . '}' 
  0:   On '}' to state 182


State 163:
77: _interval -> DECIMAL  . 
76: _decimal -> DECIMAL  . 
  Reduce by 77: _interval -> DECIMAL  . 
  Reduce by 76: _decimal -> DECIMAL  . 


State 164:
78: _interval -> _decimal  . ',' DECIMAL 
79: _interval -> _decimal  . ',' 
  0:   On ',' to state 183


State 165:
113: _simple_regex -> '(' _simple_regex ')'  . 
  Reduce by 113: _simple_regex -> '(' _simple_regex ')'  . 


State 166:
107: _characterclass -> _characterclass CC_PLUS _characterclass  . 
107: _characterclass -> _characterclass  . CC_PLUS _characterclass 
108: _characterclass -> _characterclass  . CC_MINUS _characterclass 
  0 (removed by precedence):   On CC_PLUS to state 128
  1 (removed by precedence):   On CC_MINUS to state 129
  Reduce by 107: _characterclass -> _characterclass CC_PLUS _characterclass  . 


State 167:
108: _characterclass -> _characterclass CC_MINUS _characterclass  . 
107: _characterclass -> _characterclass  . CC_PLUS _characterclass 
108: _characterclass -> _characterclass  . CC_MINUS _characterclass 
  0 (removed by precedence):   On CC_PLUS to state 128
  1 (removed by precedence):   On CC_MINUS to state 129
  Reduce by 108: _characterclass -> _characterclass CC_MINUS _characterclass  . 


State 168:
105: _cc_set -> _cc_start _cc_contents _cc_end  . 
  Reduce by 105: _cc_set -> _cc_start _cc_contents _cc_end  . 


State 169:
103: _cc_contents -> _cc_contents _cc_element  . 
  Reduce by 103: _cc_contents -> _cc_contents _cc_element  . 


State 170:
87: _cc_end -> ']'  . 
  Reduce by 87: _cc_end -> ']'  . 


State 171:
106: _cc_set -> _cc_negated _cc_contents _cc_end  . 
  Reduce by 106: _cc_set -> _cc_negated _cc_contents _cc_end  . 


State 172:
34: _debugnamelist -> _debugnamelist _opt_comma  . _debugname 
  0:   On _debugname to state 184
  1:   On IDENTIFIER to state 152


State 173:
31: _opt_comma -> ','  . 
  Reduce by 31: _opt_comma -> ','  . 


State 174:
43: _opt_steprange -> _m_debugsteps '=' _firststep _opt_laststep  . 
  Reduce by 43: _opt_steprange -> _m_debugsteps '=' _firststep _opt_laststep  . 


State 175:
41: _opt_laststep -> DECIMAL  . 
  Reduce by 41: _opt_laststep -> DECIMAL  . 


State 176:
134: _ms_block -> _miniscanner '{' _msBlock_rules _msBlock_rule_def  . '}' 
131: _msBlock_rule -> _msBlock_rule_def  . '\x0a' 
  0:   On '}' to state 185
  1:   On '\x0a' to state 186


State 177:
132: _msBlock_rules -> _msBlock_rules _msBlock_rule  . 
  Reduce by 132: _msBlock_rules -> _msBlock_rules _msBlock_rule  . 


State 178:
127: _msBlock_rule_def -> _regex_list  . 
128: _msBlock_rule_def -> _regex_list  . _block 
124: _regex_list -> _regex_list  . ORNL _regex_list 
  0:   On _block to state 187
  1:   On ORNL to state 188
  2:   On BLOCK to state 111
  Reduce by 127: _msBlock_rule_def -> _regex_list  . 


State 179:
129: _msBlock_rule_def -> EOF_PATTERN  . 
130: _msBlock_rule_def -> EOF_PATTERN  . _block 
  0:   On _block to state 189
  1:   On BLOCK to state 111
  Reduce by 129: _msBlock_rule_def -> EOF_PATTERN  . 


State 180:
125: _regex_list -> _regex  . 
  Reduce by 125: _regex_list -> _regex  . 


State 181:
59: _miniscanner_list -> _miniscanner_list ',' identifier  . 
  Reduce by 59: _miniscanner_list -> _miniscanner_list ',' identifier  . 


State 182:
83: _quantifier -> '{' _interval '}'  . 
  Reduce by 83: _quantifier -> '{' _interval '}'  . 


State 183:
78: _interval -> _decimal ','  . DECIMAL 
79: _interval -> _decimal ','  . 
  0:   On DECIMAL to state 190
  Reduce by 79: _interval -> _decimal ','  . 


State 184:
34: _debugnamelist -> _debugnamelist _opt_comma _debugname  . 
  Reduce by 34: _debugnamelist -> _debugnamelist _opt_comma _debugname  . 


State 185:
134: _ms_block -> _miniscanner '{' _msBlock_rules _msBlock_rule_def '}'  . 
  Reduce by 134: _ms_block -> _miniscanner '{' _msBlock_rules _msBlock_rule_def '}'  . 


State 186:
131: _msBlock_rule -> _msBlock_rule_def '\x0a'  . 
  Reduce by 131: _msBlock_rule -> _msBlock_rule_def '\x0a'  . 


State 187:
128: _msBlock_rule_def -> _regex_list _block  . 
  Reduce by 128: _msBlock_rule_def -> _regex_list _block  . 


State 188:
124: _regex_list -> _regex_list ORNL  . _regex_list 
  0:   On _regex_list to state 191
  1:   On _regex to state 180
  2:   On _p_regex to state 71
  3:   On _simple_regex to state 72
  4:   On _combi_chars to state 73
  5:   On '(' to state 74
  6:   On _characterclass to state 75
  7:   On STRING to state 76
  8:   On DECIMAL to state 77
  9:   On ESCAPE_SEQUENCE to state 78
  10:   On identifier to state 79
  11:   On CHAR to state 80
  12:   On '.' to state 81
  13:   On ',' to state 82
  14:   On '^' to state 83
  15:   On '$' to state 84
  16:   On '=' to state 85
  17:   On '-' to state 86
  18:   On ''' to state 87
  19:   On _cc_set to state 88
  20:   On IDENTIFIER to state 39
  21:   On _cc_start to state 89
  22:   On _cc_negated to state 90
  23:   On CC_START to state 91
  24:   On CC_NEGATED to state 92


State 189:
130: _msBlock_rule_def -> EOF_PATTERN _block  . 
  Reduce by 130: _msBlock_rule_def -> EOF_PATTERN _block  . 


State 190:
78: _interval -> _decimal ',' DECIMAL  . 
  Reduce by 78: _interval -> _decimal ',' DECIMAL  . 


State 191:
124: _regex_list -> _regex_list ORNL _regex_list  . 
124: _regex_list -> _regex_list  . ORNL _regex_list 
  0 (removed by precedence):   On ORNL to state 188
  Reduce by 124: _regex_list -> _regex_list ORNL _regex_list  . 



