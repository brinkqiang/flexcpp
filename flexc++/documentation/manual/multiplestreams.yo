Some scanners (such as those which support `include' files) require reading
from several input streams. Usually, one switches streams when a directive
like tt(#include) is encountered. Flc() offers two ways of switching streams:

itemization(
    it() First, a directive like tt(#include) may be defined. In this case,
    processing the current file is suspended and processing continues at the
    file mentioned in the directive. When finished processing this included
    file, the scanner switches back to the suspended input stream. In this
    case streams are pushed on a stack when encountering a stream switching
    directive and popped off the stack once the current file has completely
    been processed.
    it() Second, the user may request the scanner to switch to another stream.
    Optionally, the user may request to switch back. In this case, the user is
    completely responsible for all stream-related bookkeeping. The scanner
    merely provides a means to switch from one stream to another.
)

Users may want to store information related to a certain stream, beside the
information strictly required by flc() (an tt(istream) pointer and tt(size_t)
for the line numbering). For example, a user may want to use the name of the
file that is currently being processed. 

WIP: this section needs rewriting

