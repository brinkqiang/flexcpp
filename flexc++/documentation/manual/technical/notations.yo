subsubsect(Notations)

    itemization(
    itt(BOL): Begin-of-line is abbreviated to BOL.
    itt(LOP): the lookahead operator (tt(/)) is abbreviated to LOP.
    itt(RE): A regular expression.
    )

    itemization(
    itt(F): A final state.
    it() em(LOP): the em(lookahead) operator (tt('/')).
    itt(x[y]): at state tt(x) an empty transition to state tt(y) is allowed.
        See figure ref(NFA1FIG).
    )

subsubsect(Example of LOP-patterns)

    When an tt(F) state of a LOP pattern  is reached and there
        is no continuation at that point then the pattern until the A0 state
        is considered matched and is returned.

    itemization(
    it() The pattern tt(a/a+):

            figure(images/NFA1)(The pattern a/a+)(NFA1FIG)

        The accept count of this state is A0, and state 2 is its Final state
    
    it() The pattern tt(a*/aaa): Start counting from  the tt(A0) state until
        the F-state has been reached. 

            figure(images/NFA2)(The pattern a*/aaa)(NFA2FIG)
    
    The resulting DFA becomes:
        center(
   
    table(5)(llrc)(
    rowline()
    row(cell()         cell(Input Ch)                                )
    row(cell(StateSet) ccell(a)         cell(Fin/Acc)cell() cell(#steps)  )
    rowline()
    row(
            cell(12)        cell(123)   rcell(A0)                    )
    row(
            cell(123)       cell(1234)  rcell(A1)    cell() ccell(1)    )
    row(
            cell(1234)      cell(12345) rcell(A2)    cell() ccell(2)   )
    row(
            cell(12345)     cell(12345) rcell(F, A3) cell() ccell(3)   )
    rowline()
    ))
    
    )
                

