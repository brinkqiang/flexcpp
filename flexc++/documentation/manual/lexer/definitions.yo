Flc() supports command-line em(options) and input-file em(directives)
controlling flc()'s behavior. Directives are covered in the next section
(ref(DIRECTIVES)), options are covered in the section ref(OPTIONS).

The definitions section may also contain declarations of named regular
expressions. A named regular expression looks like
this:

verb(name   pattern)

Here, tt(name) is is an identfier, that may also contain the hyphen (tt(-)).
The `tt(pattern)' is a regular expression, see section ref(patterns). Patterns
start at the first non-blank character following the name, and end at the
line's last non-blank character. Consequently, a named regular expression
itself cannot contain comment.

Finally, the definitions section may be used to declare em(mini-scanners)
(a.k.a.  em(start conditions)), cf. section ref(STARTCONDITIONS).
Mini-scanners are very useful for scanning small `sub-languages' in the
language you want to scan. A commonly encountered example is the mini-scanner
recognizing bf(C) style multi-line comment.
