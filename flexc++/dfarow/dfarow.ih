#include "dfarow.h"

#include <algorithm>
#include <climits>
#include <sstream>
#include <iterator>
#include <sstream>

#include <bobcat/fnwrap>
#include <bobcat/table>
#include <bobcat/x2a>

#include <iostream>     // TEMPO

using namespace std;
using namespace FBB;

//Xinline State &DFARow::acceptState(size_t rule) const
//X{
//X    return (*d_states)[(*d_rules)[rule].accept()];
//X}

//Xinline void DFARow::nextAcceptType(size_t rule, DFARow &row)
//X{
//X    cerr << "dfarow.ih: nextAcceptType\n";
//X    //row.acceptState(rule).nextAccept();
//X}

