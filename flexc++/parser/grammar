%class-name Parser

%filenames parser
%parsefun-source parse.cc
%scanner ../scanner/scanner.h
%print                      d_scanner.match()
%scanner-token-function     d_scanner.lex()
%debug

%baseclass-preinclude preinclude.h

%stype spSemVal


// definition section
%token  EXCL_START_CONDITION
        INCL_START_CONDITION
        NAME
        SECTION_DELIMITER

// options
%token  BASECLASSHEADER
        CLASSHEADER
        CLASSNAME
        DEBUG
        DEBUG_STEPS
        IMPLEMENTATIONHEADER
        INTERACTIVE
        LEXFUNCTIONNAME
        LEXSOURCE
        NAMESPACE
        OPTION_DIRECTIVE
        SKELETON_DIRECTORY
        // STREAM_INFO_CLASSNAME
        // STREAM_INFO_INCLUDE

// rulessection
%token  BLOCK

// pattern
%token  DECIMAL 
        CC_NEGATED
        CC_START
        EOF_PATTERN
        ESCAPE_SEQUENCE      
        STRING 
        WS

// character classes
%token  PREDEFINED_CLASS

// Operators:
//  lowest precedence

// precedence inside character classes:
%left CC_PLUS CC_MINUS

// operators in pattern: 
//                      
%nonassoc   '^' '/'
%left       '|'
%left       CHARACTER
%right      '*' '+' '?' '{' '('

//  highest precedence

%%

input:
    opt_directives          // directives. C(++) code now in a class
    section_delimiter mode_pattern
    opt_rules
;

section_delimiter:
    SECTION_DELIMITER
    {
        sectionDelimiter();
    }
;

%include rules/messages                 
%include rules/modeswitches             

%include rules/plaincharacters          
%include rules/characterclass           // TO DO
%include rules/pattern                  // TO COMPLETE

%include rules/option                   
%include rules/directives               

%include rules/rulessection             
