opt_directives:
    opt_directives directive_line
|
    // empty
;

directive_line:
    directive '\n' mode_initial
;

directive:
    option
|
    start_condition_directive
|
    name_definition
|
    error
|
    // empty
;

start_condition_directive:
    start_condition_type
    start_condition_names
;

start_condition_type:
    INCL_START_CONDITION 
    start_condition_name_m
    {
        d_rules.setType(StartConditions::INCLUSIVE);
    }
|
    EXCL_START_CONDITION 
    start_condition_name_m
    {
        d_rules.setType(StartConditions::EXCLUSIVE);
    }
;

start_condition_names:
    start_condition_names name
    {
        d_rules.addStartCondition(*$2);
    }
|
    name
    {
        d_rules.addStartCondition(*$1);
    }
;

name_definition:
    name_mode_patterntxt pattern_txt patternContext
    {
        d_scanner.addDefinition(*$1, *$2);
    }
;

pattern_txt:
    STRING                  // all text beyond the definition name,
    {                       // which is trimmed by 'addDefinition'
        $$ = TextVal::plain(d_scanner.matched());   
    }
;

name_mode_patterntxt:
    name_def
    mode_patterntxt
;

name_def:
    name
    {
        d_scanner.newDefinition();
    }
;

name:
    NAME
    {
        $$ = TextVal::trimmed(d_scanner.matched());
    }
;
