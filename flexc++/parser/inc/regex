_single_char:
    CHAR
|
    combi_chars
;

_multi_char:
    DECIMAL
|
    IDENTIFIER
;

_open_paren:
    '('
    {
        ++d_parentheses;
    }
;

_close_paren:
    ')'
    {
        --d_parentheses;
    }
;

_unit:
    '^'
    {
        $$ = boln();
    }
|
    '$'
    {
        $$ = dollar();
    }
|
    DOLLAR
    {
        $$ = eolnDollar();
    }
|
    STRING
    {
        $$ = str();
    }
|
    QUOTES
    {                                                   
        $$ = quotes();
    }
|
    _multi_char
    {
        $$ = head();
    }
|
    _single_char
    {
        $$ = rawText();
    }
|
    ESCAPE_SEQUENCE
    {
        $$ = escape();
    }
|
    '.'
    {
        $$ = dot();
    }
|
    _unit _quantifier
    {
        $$ = quantifier($1);
    }
|
    _unit '{' _interval '}'
    {
        $$ = interval($1, $3);
    }
|
    characterclass
    {
        $$ = characterClass($1);
    }
|
    _open_paren regex _close_paren
    {
        $$ = $2;
    }
;


_or:
    _unit
|
    _or _unit
    {
        $$ = concatenate($1, $2);
    }
;

_lop:
    _or
|
    _lop '|' _or
    { 
        $$ = alternatives($1, $3);
    }
;

    // a regex is a regex, possibly with LA operator
    // the handler must verify whether the regex contains ^ and $ symbols
    // within the regex, for which a warning must be issue: ^, $ treated as
    // normal characters
    // regex returns a Pattern, embedded in a spSemUnion
regex:
    _lop
|
    regex '/' _lop
    {
        $$ = lookahead($1, $3);
    }
;







